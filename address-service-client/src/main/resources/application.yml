---
spring:
  application:
    name: address-service-client

server:
  port: ${PORT:8081}

eureka:
  client: 
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    metadata-map:
      version: 1.0.0
      cluster: DEV            # Required by Turbine (see turbine project's application.yml)
      zone: AWS-EU-FRA        # Specify the zone this service is running in. Used to match clients in the same zone first.

# Expose all actuator / management endpoints. Don't use this in production.
management.endpoints.web.exposure.include: "*"

# Expose all health information, also from Hystrix, Eureka and others.
# See: https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/#production-ready-health 
management.endpoint.health.show-details: always 

# Enable implicit wrapping of FeignClient calls in Hystrix commands.
# This is used by HystrixAddressServiceProxy.class and HystrixAddressServiceProxyWithException.class
# See FeignAddressServiceClient.java for an example on how explicitly disable the implicit wrapping on a per-client basis.
feign.hystrix.enabled: true                     

# Adjust connection timeouts of Hystrix and Ribbon.
# Make sure that Hystrix (the circuit breaker) times out later  
# than Ribbon (the HTTP client) does. When Ribbon times out, it might
# retry requests (if Spring Retry is on the classpath). These retries
# should also be included into the Hystrix timeout. Only if Ribbon (and
# all its retry attempts) have timed out, Hystrix should get active.
# Rule of thumb: 
# hystrix timout = (max(ribbon.ConnectTimeout, ribbon.ReadTimeout) * (1 + ribbon.MaxAutoRetries) * (1 + MaxAutoRetriesNextServer)) + Buffer
# with Buffer = 250ms to 500 ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 4500
ribbon:
  ConnectTimeout: 1000              # timeout for establishing a connection.
  ReadTimeout: 1000                 # timeout for receiving data after connection is established.
  MaxAutoRetries: 1                 # maximum number of retries ribbon will attempt in case of timeouts or errors.
  MaxAutoRetriesNextServer: 1       # maximum number of other service instances to retry.
  OkToRetryOnAllOperations: false   # disable retries for POST operations
  retryableStatusCodes: 404,500     # retry when receiving these response status codes. Requires Spring Retry on the classpath. 

# See also: https://github.com/Netflix/ribbon/blob/master/ribbon-core/src/main/java/com/netflix/client/config/CommonClientConfigKey.java
---
spring.profiles: cloud

eureka:
  instance: 
    hostname: ${vcap.application.uris[0]:localhost}
    nonSecurePortEnabled: false
    securePortEnabled: true
    securePort: 443
    metadataMap:
      # Adding information about the application GUID  and app instance index. 
      cfAppGuid:       ${vcap.application.application_id}
      cfInstanceIndex: ${INSTANCE_INDEX}
  client: 
    serviceUrl:
      defaultZone: https://eureka-server.<your cf domain>/eureka


